@startuml uml
class Redis
{
    private Validation validation
    private Connect connect
    private Create create
    private Read read
    private Update update
    private Erase erase
    public Redis(const char* addr, int port)
    public int create()
    public int read()
    public int update()
    public int erase()
}
class Connect
{
    private const char* addr;
    private int port;
    private int connect_status;
    private int redis_socket;
    private struct sockaddr_in redis_server;
    public Connect(const char* addr, int port);
    public int isConnect();
    public int redisConnect();
    public int disConnect();
    public int redisSend(const char* query);
}
class Validation
{
    public int isStringEmpty(const char *string);
}
class Create
{
    private int type;
    private const char *json;
    private Connect *redis_connect;
    public Create(int type, std::map<const char *, const char *> data);
    public Create(int type, const char *json, Connect *connect);
    public int execute();
    public int createSchemaByQuery();
    public int createNodeByQuery();
}
class Read
class Update
class Delete
@enduml